LEFT OFF HERE:
    working on selected transition ctrl
        stuff mostly works, need to:
            update the gui whenever I submit an action on user entry input
            may need to call update() after user changes the transition type (to overwrite contents of text entry)
    after that, figure out why there is a double free crash when the program exits


bug
    make a 2x wider state and a normal size one
    connect the 2 states
    zoom out a bunch (may not be necessary)
    rotate the smamll one around the big one
        the transition doesnt always stay stuck to both, it disconnects from the small one sometimes.


box entity stuff
    then do the double resize operation (corner drag)
    then possibly refactor the move state/rlock ops into a single move box entity operation to be consistent
    
    fix drawing order to be same as click event handling order
        (resourcelocks last, either states or transitions first, i think transitions?)
 

=== for later === 

add minimum size to resize operations

text clipping for boxentity titles

add error checks to everything that could fail:
    opengl init
    font load
    ... check nanovg examples for all error codes that they check

when done, test to see if things get screwed up if a gui operation is in progress (eg, dragging a state), and you drag away from the gl area, release the mb, and then come back. presumably it would enter a weird state and you would have to click and release once more to release the state.

if GuiOpResult.CANCEL is going to be a thing, then whene it's returned, we may need to silently undo the last operation? figure out how that's gonna work, if cancel is to be a thing. could be used when you drag a state off the 

enforce no undo / redo while there is a gui operation
    so gui operations with pointers to "current whatever" wont break because user pressedd ctrl z 

