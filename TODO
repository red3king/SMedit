
RIGHT NOW LEFT OFF HERE:
    JUST WROTE THE MOVE SINGLE ENDPOINT CODE, need to:
        -modify state and transition delete code to delete pointers
            note: THE TRANSITION DELETE HAD BETTER DOUBLE REMOVE THE TRANSITIN FOR LOOPY TRANSITIONS
        -then try to get it to compile and run

    working on transition ops
        first do disconnected move
        then do one end only move with state attachment + detachment
        then do arc render when connecting to same state twice

    then do the double resize operation (corner drag)
    then possibly refactor the move state/rlock ops into a single move box entity operation to be consistent
    
    fix drawing order to be same as click event handling order
        (resourcelocks last, either states or transitions first, i think transitions?)
 

=== for later === 

add minimum size to resize operations

text clipping for boxentity titles

add error checks to everything that could fail:
    opengl init
    font load
    ... check nanovg examples for all error codes that they check

when done, test to see if things get screwed up if a gui operation is in progress (eg, dragging a state), and you drag away from the gl area, release the mb, and then come back. presumably it would enter a weird state and you would have to click and release once more to release the state.

if GuiOpResult.CANCEL is going to be a thing, then whene it's returned, we may need to silently undo the last operation? figure out how that's gonna work, if cancel is to be a thing. could be used when you drag a state off the 

enforce no undo / redo while there is a gui operation
    so gui operations with pointers to "current whatever" wont break because user pressedd ctrl z 

